plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8' apply false
}

if (JavaVersion.current() == JavaVersion.VERSION_11
        || JavaVersion.current() == JavaVersion.VERSION_12){
    apply plugin: 'org.openjfx.javafxplugin'
}

apply plugin: 'java'
// external repositories where dependencies of your project are found
repositories {
    // Use 'jcenter' for resolving external dependencies
    jcenter()
    mavenCentral()
}


if (JavaVersion.current() == JavaVersion.VERSION_11
        || JavaVersion.current() == JavaVersion.VERSION_12) {
    javafx {
        modules = [ 'javafx.controls', 'javafx.web', 'javafx.fxml', 'javafx.swing' ]
    }
}




dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'org.ejml', name: 'ejml-all', version: '0.38'

    testCompile group: 'junit', name: 'junit', version: '4.12'

}
jar {

    manifest {
        attributes ('Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'Main.Starter'//,
               // 'Implementation-Title': 'DiffyQGrapher'
        )
    }
    from {
        configurations.compile.collect { entry -> zipTree(entry) }
        configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)}
    }
    destinationDir = file("$rootDir/jar")
}
